{
    "meta" : {
        "label" : "Send mails from a contacts dataset",
        "description" : "Send personalised emails for every row in a Contacts dataset (mandatory), with data from Attachments datasets (optional) as CSV or Excel attachments, and use JINJA templating to show data in the email body. The output dataset shows the status of sent emails - please review it even if the job succeeds."
    },
    "kind" : "PYTHON",
    "paramsPythonSetup": "dynamic_form.py",
    "inputRoles" : [
        {
            "name": "contacts",
            "arity": "UNARY",
            "required": true
        },
        {
            "name" : "attachments",
            "arity" : "NARY",
            "required" : false
        }
    ],

    "outputRoles" : [
        {
            "name": "output",
            "arity": "UNARY",
            "required": false,
            "acceptsDataset": true
        }
    ],

    "params": [
        {
            "name": "sep-mail-settings",
            "label": "Mail Settings",
            "type": "SEPARATOR"
        },

        {
            "name": "mail_channel",
            "label" : "Channel",
            "type": "SELECT",
            "getChoicesFromPython": true,
            "disableAutoReload": true,
            "defaultValue": null,
            "description" : "Leverage channels"
        },

        {
            "name": "smtp_host",
            "label" : "SMTP Host",
            "defaultValue" : "localhost",
            "type": "STRING",
            "visibilityCondition" : "model.mail_channel == null || model.mail_channel == 'direct_smtp'"
        },
        {
            "name": "smtp_port",
            "label" : "SMTP port",
            "defaultValue" : 25,
            "type": "INT",
            "mandatory" : true,
            "visibilityCondition" : "model.mail_channel == null || model.mail_channel == 'direct_smtp'"
        },
        {
            "name": "smtp_use_tls",
            "label" : "Use TLS",
            "type": "BOOLEAN",
            "visibilityCondition" : "model.mail_channel == null || model.mail_channel == 'direct_smtp'"
        },
        {
            "name": "smtp_use_auth",
            "label" : "Use authentication",
            "type": "BOOLEAN",
            "visibilityCondition" : "model.mail_channel == null || model.mail_channel == 'direct_smtp'"
        },
        {
            "name": "smtp_user",
            "label" : "SMTP Username",
            "type": "STRING",
            "visibilityCondition" : "(model.mail_channel == null || model.mail_channel == 'direct_smtp') && model.smtp_use_auth"
        },
        {
            "name": "smtp_pass",
            "label" : "SMTP Password",
            "type": "PASSWORD",
            "visibilityCondition" : "(model.mail_channel == null || model.mail_channel == 'direct_smtp') && model.smtp_use_auth"
        },

        {
            "name": "recipient_column",
            "label" : "Recipient (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Recipient of the email (from a column)",
            "mandatory": true
        },
        {
            "name": "sender_column",
            "label" : "Sender (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Sender of the email (from a column)",
            "visibilityCondition" : "!model.use_sender_value && !model.mail_channel.endsWith('__|*_S')"
        },
        {
            "name": "sender_value",
            "label" : "Sender (value)",
            "type": "STRING",
            "description" : "Sender of the  email (provide value inline)",
            "visibilityCondition" : "model.use_sender_value && !model.mail_channel.endsWith('__|*_S')"
        },
        {
            "name": "use_sender_value",
            "label" : " ",
            "description" : "Use custom value",
            "type": "BOOLEAN",
            "visibilityCondition" : "!model.mail_channel.endsWith('__|*_S')"
        },
        {
            "name": "subject_column",
            "label" : "Subject (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Subject of the email (from a column)",
            "visibilityCondition" : "!model.use_subject_value"
        },
        {
            "name": "subject_value",
            "label" : "Subject (value)",
            "type": "STRING",
            "description" : "Subject of the email (provide value inline)",
            "visibilityCondition" : "model.use_subject_value"
        },
        {
            "name": "use_subject_value",
            "label" : " ",
            "description" : "Use custom value",
            "type": "BOOLEAN"
        },


        {
            "name": "sep_content",
            "label": "Content",
            "type": "SEPARATOR"
        },


        {
            "name": "body_column",
            "label" : "Body (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Body of the email (from a column)",
            "visibilityCondition" : "!model.use_body_value"
        },
        {
            "name": "body_value",
            "label" : "Body (plain text)",
            "type": "TEXTAREA",
            "description" :  "The body content supports JINJA templating. E.g. for a value from the input dataset use {{ column_name }}, or to loop through an attachment dataset {% for row in attachments.dataset_name.data %}{{ row.column_name }}{% endfor %} ",
            "defaultValue" : "{# add content underneath this - you can use JINJA templating e.g. {{ column_name }} #}",
            "visibilityCondition" : "model.use_body_value && (model.body_format == 'text')"
        },
        {
            "name": "html_body_value",
            "label" : "Body (HTML)",
            "type": "TEXTAREA",
            "description" : "The body content supports JINJA templating. E.g. for a value from the input dataset use {{ column_name }}, for a table of attachment data {{ attachments.dataset_name.html_table }}, or to loop through an attachment dataset {% for row in attachments.dataset_name.data %}{{ row.column_name }}{% endfor %}",
            "defaultValue" : "<!-- Template with CSS starter kit -->\n<html><head><style type=\"text/css\"> * { font-family: Verdana, sans-serif; } table { width: 100%; border-collapse: collapse; border: 1px solid #ddd; } td { padding: 10px; text-align: left; border: 1px solid #ddd; } th { background-color: #f2f2f2; padding: 10px; text-align: left; border: 1px solid #ddd; }</style></head><body>\n{# add content underneath this - you can use JINJA templating, e.g. <b>{{ column_name }}</b> #}\n\n</body></html>",
            "visibilityCondition" : "model.use_body_value && (model.body_format == 'html')"
        },
        {
            "name": "use_body_value",
            "label" : " ",
            "description" : "Use custom value",
            "type": "BOOLEAN"
        },

        {
            "name": "body_format",
            "label" : "Body format",
            "type": "SELECT",
            "selectChoices" : [
                {"value": "text", "label":"Plain text"},
                {"value": "html", "label":"HTML"}
            ],
            "defaultValue": "html",
            "description" : "Format for email body",
            "visibilityCondition" : "model.use_body_value"
        },
        {
            "name": "attachment_type",
            "label" : "Attachments format",
            "type": "SELECT",
            "defaultValue" : null,
            "getChoicesFromPython": true,
            "description" : "File format for attachments"
        },
        {
            "name": "apply_coloring_excel",
            "label" : "Apply conditional formatting",
            "description" : "Color cells by rules, when applicable",
            "type": "BOOLEAN",
            "visibilityCondition" : "model.attachment_type == 'excel_can_ac'"
        }
    ]
}
