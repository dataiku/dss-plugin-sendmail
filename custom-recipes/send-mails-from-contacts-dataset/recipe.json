{
    "meta" : {
        "label" : "Send mails from a contacts dataset",
        "description" : "The recipe takes as input a dataset of contacts, with one row per mail to send.\n\nFor each of the following fields, a value can either be provided in the configuration (if it is the same for each email to be sent) or be read from a column in the dataset\n\n* Sender email\n* Email subject\n* Email body\n* Optionally, attachements can be provided from another dataset (and be sent as CSV or Excel).\n The output dataset is only used for reporting. Email address should generally be in the form: 'Name <local@domain.com>' "
    },

    "kind" : "PYTHON",

    "inputRoles" : [
        {
            "name": "contacts",
            "arity": "UNARY",
            "required": true
        },
        {
            "name" : "attachments",
            "arity" : "NARY",
            "required" : false
        }
    ],

    "outputRoles" : [
        {
            "name": "output",
            "arity": "UNARY",
            "required": false,
            "acceptsDataset": true
        }
    ],

    "params": [
        {
            "name": "sep1",
            "label": "Mail Settings",
            "type": "SEPARATOR"
        },

        {
            "name": "recipient_column",
            "label" : "Recipient (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Recipient of the email (from a column)",
            "mandatory": true
        },
        {
            "name": "sender_column",
            "label" : "Sender (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Sender of the email (from a column)",
            "visibilityCondition" : "!model.use_sender_value"
        },
        {
            "name": "sender_value",
            "label" : "Sender (value)",
            "type": "STRING",
            "description" : "Sender of the  email (provide value inline)",
            "visibilityCondition" : "model.use_sender_value"
        },
        {
            "name": "use_sender_value",
            "label" : " ",
            "description" : "Use custom value",
            "type": "BOOLEAN"
        },
        {
            "name": "subject_column",
            "label" : "Subject (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Subject of the email (from a column)",
            "visibilityCondition" : "!model.use_subject_value"
        },
        {
            "name": "subject_value",
            "label" : "Subject (value)",
            "type": "STRING",
            "description" : "Subject of the email (provide value inline)",
            "visibilityCondition" : "model.use_subject_value"
        },
        {
            "name": "use_subject_value",
            "label" : " ",
            "description" : "Use custom value",
            "type": "BOOLEAN"
        },


        {
            "name": "sep2",
            "label": "Content",
            "type": "SEPARATOR"
        },


        {
            "name": "body_column",
            "label" : "Body (column)",
            "type": "COLUMN",
            "columnRole" : "contacts",
            "description" : "Body of the email (from a column)",
            "visibilityCondition" : "!model.use_body_value"
        },
        {
            "name": "body_value",
            "label" : "Body (text)",
            "type": "TEXTAREA",
            "description" :  "The body content supports JINJA templating. E.g. for a value from the input dataset use {{ column_name }}, for a table of attachment data {{ attachments.dataset_name.html_table }}, or to loop thru an attachment dataset {% for row in attachments.dataset_name.data %}{{ row.column_name }}{% endfor %} ",
            "defaultValue" : "{# add content underneath this - you can use JINJA templating e.g. {{ column_name }} #}",
            "visibilityCondition" : "model.use_body_value && !model.use_html_body_value"
        },
        {
            "name": "html_body_value",
            "label" : "Body (HTML)",
            "type": "TEXTAREA",
            "description" : "The body content supports JINJA templating. E.g. for a value from the input dataset use {{ column_name }}, for a table of attachment data {{ attachments.dataset_name.html_table }}, or to loop thru an attachment dataset {% for row in attachments.dataset_name.data %}{{ row.column_name }}{% endfor %}",
            "defaultValue" : "<!-- Template with CSS starter kit -->\n<html><head> <style type=\"text/css\"> * { font-family: Verdana, sans-serif; } table { width: 100%; border-collapse: collapse; border: 1px solid #ddd; } th, td { padding : 10px; text-align : left; } th { background-color : #f2f2f2; }</style></head><body>\n{# add content underneath this - you can use JINJA templating, e.g. <b>{{ column_name }}</b> #}\n\n</body></html>",
            "visibilityCondition" : "model.use_body_value && model.use_html_body_value"
        },
        {
            "name": "use_body_value",
            "label" : " ",
            "description" : "Use custom value",
            "type": "BOOLEAN"
        },
        {
            "name": "use_html_body_value",
            "label" : "Send as HTML",
            "defaultValue": true,
            "description" : "Send body's custom value as HTML",
            "visibilityCondition" : "model.use_body_value",
            "type": "BOOLEAN"
        },


        {
            "name": "body_encoding",
            "label" : "Body (encoding)",
            "type": "SELECT",
            "selectChoices" : [
                {"value": "utf-8", "label":"UTF-8 (Default)"},
                {"value": "us-ascii", "label":"us-ascii"},
                {"value": "latin-1", "label":"Latin-1"}
            ],
            "defaultValue": "utf-8",
            "description" : "Body encoding (UTF-8 recommended)"
        },
        {
            "name": "attachment_type",
            "label" : "Attachments format",
            "type": "SELECT",
            "defaultValue" : "csv",
            "description" : "File format for attachments",
            "selectChoices" : [
                {"value":  "excel" , "label":"Excel"},
                {"value":  "csv" , "label":"CSV"}
            ]
        },
                {
        "name": "sep3",
        "label": "Authentication",
        "type": "SEPARATOR"
        },
        {
            "name": "smtp_host",
            "label" : "SMTP Host",
            "defaultValue" : "localhost",
            "type": "STRING",
            "mandatory": true
        },
        {
            "name": "smtp_port",
            "label" : "SMTP port",
            "defaultValue" : 25,
            "type": "INT"
        },
		{
            "name": "smtp_use_tls",
            "label" : "Use TLS",
            "type": "BOOLEAN"
        },
				{
            "name": "smtp_use_auth",
            "label" : "Use authentication",
            "type": "BOOLEAN"
        },
		{
            "name": "smtp_user",
            "label" : "SMTP Username",
            "type": "STRING",
			"visibilityCondition" : "model.smtp_use_auth"
        },
        {
            "name": "smtp_pass",
            "label" : "SMTP Password",
            "type": "PASSWORD",
			"visibilityCondition" : "model.smtp_use_auth"
        }
    ]
}